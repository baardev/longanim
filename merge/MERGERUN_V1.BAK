#!/bin/bash -x

#IMAGE1="kitten"
#IMAGE2="dragon"
IMAGE1=${1}
IMAGE2=${2}
STUB=${IMAGE1}_${IMAGE2}
NAME=${STUB}.mp4

#-------------------------------------------------------------------------------------------
#-
#-------------------------------------------------------------------------------------------
#clear
cd /home/jw/src/sdc/settings/COMFY/merge/

#! start comfy, set outfile dirsotry tpo settings project
/bin/rm -rf stage_1/*
/bin/rm -rf stage_2/*

#!################################# in ComfyUI interface, make changes to workflow "mask_v0.json"

#! create frames
./qmasks_v0.py --output_dir /home/jw/src/sdc/settings/COMFY/merge/stage_1 --input_dir /home/jw/src/sdc/settings/COMFY/merge --images ${IMAGE1}.png,${IMAGE2}.png &

#! need to wait for the que to finish
./wait_for_glob.py stage_1/*_1.00-0.00_00001_.png

#-------------------------------------------------------------------------------------------
#- Interp first first 2 frames only
#-------------------------------------------------------------------------------------------

#! add first frame from original images
cp ${IMAGE1}.png stage_1/00000.png

./interpolate_v0.py \
--name ${STUB}1 \
--input_dir stage_1 \
--frame_rate 8 \
--multiplier 10 \
--image_load_cap 2 \
--interpolate 1


./wait_for_glob.py stage_2/${STUB}1_00001.mp4
sleep 15
zip ${STUB}_FIRST.zip stage_2/*.png
rm stage_1/00000.png


#-------------------------------------------------------------------------------------------
#- Interp last  2 frames only
#-------------------------------------------------------------------------------------------

mkdir tmp123
cp  stage_1/0054*.png tmp123/1.png
cp ${IMAGE2}.png tmp123/2.png

#! add last frame from original images
#cp ${IMAGE2}.png stage_1/99999.png

./interpolate_v0.py \
--name ${STUB}2 \
--input_dir tmp123 \
--frame_rate 8 \
--multiplier 10 \
--image_load_cap 2 \
--interpolate 1
#--lastclip

./wait_for_glob.py stage_2/${STUB}2_00001.mp4
#sleep 15
#zip ${STUB}_LAST.zip stage_2/*.png
#rm -rf tmp123



#-------------------------------------------------------------------------------------------
#- Create main interps video
#-------------------------------------------------------------------------------------------
#rm stage_3/${STUB}.mp4
./interpolate_v0.py \
--name ${STUB} \
--input_dir stage_1 \
--frame_rate 8 \
--multiplier 2 \
--image_load_cap 1000 \
--interpolate 1

./wait_for_glob.py stage_2/${STUB}_00001.mp4
#! if teh file is big, needs time to finish writing
sleep 15
zip ${STUB}_MAIN.zip stage_2/*.png
#-------------------------------------------------------------------------------------------
#- Merge clips
#-------------------------------------------------------------------------------------------

#! old version
#ffmpeg -y -loglevel warning -i  stage_2/TMP1_00001.mp4 -r 300/1 stage_1/_%05d.png
#ffmpeg -y -loglevel warning -i  stage_2/TMP2_00001.mp4 -r 300/1 stage_1/99999_%05d.png


FPS="30"
ffmpeg -y -loglevel warning -i stage_2/${STUB}_00001.mp4 -filter:v fps=${FPS} stage_2/${FPS}_${STUB}_00001.mp4
ffmpeg -y -loglevel warning -i stage_2/${STUB}1_00001.mp4 -filter:v fps=${FPS} stage_2/${FPS}_${STUB}1_00001.mp4
ffmpeg -y -loglevel warning -i stage_2/${STUB}2_00001.mp4 -filter:v fps=${FPS} stage_2/${FPS}_${STUB}2_00001.mp4

echo "file 'stage_2/${FPS}_${STUB}1_00001.mp4" > list
echo "file 'stage_2/${FPS}_${STUB}_00001.mp4" >> list
echo "file 'stage_2/${FPS}_${STUB}2_00001.mp4" >> list

rm stage_3/${FPS}_${STUB}.mp4
ffmpeg -y -loglevel warning -f concat -safe 0 -i list -c copy stage_3/${FPS}_${STUB}.mp4






